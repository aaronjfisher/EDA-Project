pie(1,col=c("red"),init.angle=0,radius=1,border=F,labels='Rafa',main='Pie Chart of statements made by professors \n  in support of pie charts \n(organized by professor)',cex=1.5)
dev.copy2pdf(file='PieChart.pdf')
I'm trying
'sdfa slf'
output
'sdf'asdf
'sdf'
r<-4
(1/2)-.5*cos(x/r)
x<-3
(1/2)-.5*cos(x/r)
cos(0)
-cos(x)/2+r/2
initialize parameters#
beta0<-nieveModel2$coef[1]#
betat<-nieveModel2$coef[2]#
betav<-nieveModel2$coef[3]#
s_b<-sd(y)#
b<-rep(0,ngroups)
x<-rnorm(1000, 20)
x<-rnorm(10000)
for(i in 1:200){#
	m<-mean(e^(i*x))#
}
for(i in 1:200){
for(i in 1:200){#
	m<-mean(e^(i*x))#
}
for(i in 1:200){#
	m<-mean(exp(i*x))#
}
m
for(i in 1:200){#
	m[i]<-mean(exp(i*x))#
}
m
for(i in -200:200){#
	m[i]<-mean(exp(i*x))#
}
plot(m)
plot(m[abs(m)<1000])
plot(m,type='l')
ngroups<-length(unique(group))
sum(.5^n)
n<- 1:1000
sum(.5^n)
r<-binom(1000,1,prob=.2)
r<-rbinom(1000,1,prob=.2)
r
mean(r)
r<-rbinom(10000,1,prob=.2)
mean(r)
r<-rbinom(10000,1,prob=.2)
mean(r)
mean(r^2)
sample("Aaron","Amanda","Prasad","Therri")
sample(c("Aaron","Amanda","Prasad","Therri"))
JOOOSODIFOIJWEOIJWEOIJFWOIRWOI
1+1
3
4
library(MASS)
simga<-array(c(2,1,1,4))
simga<-array(c(2,1,1,4),dim=c(2,2))
sigma
simga
mu<-c(2,3)
x<-mvrnorm(100000,mu,sigma)
x<-mvrnorm(100000,mu,simga)
dim(x)
y<-x[,2]
x<-x[,1]
cov(x,y)
cor(x,y)
1/(2*sqrt(2))
mean(x+y)
var(x+y)
var(x-y)
mean(x-y)
cov(x+y,x-y)
cov(-sqrt(2)*x+y,sqrt(2)*x+y)
X<-mvrnorm(1000000,mu,simga)
x<-X[,1]
y<-X[,2]
cov(-sqrt(2)*x+y,sqrt(2)*x+y)
X<-mvrnorm(2000000,mu,simga)
x<-X[,1]
y<-X[,2]
cov(-sqrt(2)*x+y,sqrt(2)*x+y)
cor(-sqrt(2)*x+y,sqrt(2)*x+y)
X<-mvrnorm(5000000,mu,simga)
y<-X[,2]
x<-X[,1]
cor(-sqrt(2)*x+y,sqrt(2)*x+y)
library(MASS)
mu<-c(2,3)#
sigma<-array(c(2,1,1,4))
mu<-c(2,3)
sigma<-array(c(2,1,1,4))
mu<-c(2,3)
sigma<-array(c(2,1,1,4))
a<-mvrnorm(100000,my,sigma)
a<-mvrnorm(100000,mu,sigma)
mu<-c(2,3)#
sigma<-array(c(2,1,1,4),dim=c(2,2))#
a<-mvrnorm(100000,mu,sigma)
dim(a)
cov(x-y,4*x+6*y)
x<-a[,1]
y<-a[,2]
cov(x-y,4*x+6*y)
cor(x-y,4*x+6*y)
cov(sqrt(2)*x-y,\sqrt(2)x+y)
cov(sqrt(2)*x-y,sqrt(2)x+y)
cov(sqrt(2)*x-y,sqrt(2)*x+y)
cor(sqrt(2)*x-y,sqrt(2)*x+y)
mu<-c(2,3)#
sigma<-array(c(2,1,1,4),dim=c(2,2))#
a<-mvrnorm(1000,mu,sigma)#
#
x<-a[,1]#
y<-a[,2]#
#
cor(sqrt(2)*x-y,sqrt(2)*x+y)
mu<-c(2,3)#
sigma<-array(c(2,1,1,4),dim=c(2,2))#
a<-mvrnorm(100,mu,sigma)#
#
x<-a[,1]#
y<-a[,2]#
#
cor(sqrt(2)*x-y,sqrt(2)*x+y)
mu<-c(2,3)#
sigma<-array(c(2,1,1,4),dim=c(2,2))#
a<-mvrnorm(400000,mu,sigma)#
#
x<-a[,1]#
y<-a[,2]#
#
cor(sqrt(2)*x-y,sqrt(2)*x+y)
testvar<-function(a,b,c,d){#
	out<-a*c*2+b*d*4+(b*c+a*d)	#
	return(out)#
}
testvar(-sqrt(2),1,sqrt(2),1)
testvar(2,-1,4,6)
testvar(1,1,1,-3/5)
testvar(-1/2,1/4,-1/2,-1/4)
testvar(-1/sqrt(2),1/sqrt(4),-1/sqrt(2),-1/2)
library(MASS)
x<-mvrnorm(100,20)
x<-mvrnorm(100,20,Sigma=diag(1:20))
diag(1:10)
x<-mvrnorm(100,Sigma=diag(1:10))
x<-mvrnorm(100,Sigma=diag(1:10),mu=1:10)
x
dim(x)
y<-x[1:5]
y<-x[,1:5]
dim(y)
cor(x,y)
sample(c('dan drives','aaron drives'),1)
get.seed()
x<-c(95.8,#
106.8,#
96.2,#
94.3,#
99.7,#
86.3,#
94.8,#
99.9,#
102.3,#
99.2,#
98.7,#
100.0)
x
> x<-c(95.8,#
+ 106.8,#
+ 96.2,#
+ 94.3,#
+ 99.7,#
+ 86.3,#
+ 94.8,#
+ 99.9,#
+ 102.3,#
+ 99.2,#
+ 98.7,#
+ 100.0)
x<-c(95.8,#
+ 106.8,#
+ 96.2,#
+ 94.3,#
+ 99.7,#
+ 86.3,#
+ 94.8,#
+ 99.9,#
+ 102.3,#
+ 99.2,#
+ 98.7,#
+ 100.0)
x
rm(x)
x<-c(95.8,#
+ 106.8,#
+ 96.2,#
+ 94.3,#
+ 99.7,#
+ 86.3,#
+ 94.8,#
+ 99.9,#
+ 102.3,#
+ 99.2,#
+ 98.7,#
+ 100.0)
x
hist(x)
hist(x,breaks=8)
hist(x,breaks=8,col='blue')
hist(x,breaks=8,col='lightblue')
hist(x,breaks=8,col='lightblue',main='Histogram of Final Grades')
hist(x,breaks=8,col='lightblue',main='Histogram of Final Grades',xlab='% Grade')
stem(x)
hist(x,breaks=8,col='lightblue',main='Histogram of Final Grades',xlab='% Grade')
dev.copy2pdf(file='Histogram of Final Grades Term 2 Essentials of Probability.pdf')
getwd()
1218/1199
(1218+900)/1199
1099*1.0766
sample(c("aaron","prasad"))
3584.7-918
918*4
918*3
nreps<-1000#
record<-1:nreps
for(i in 1:nreps){#
  print(i)#
  n<-20#
  x<-rnorm(n,mean=30)#
  x<-x[order(x)]#
  e<-rnorm(n)#
  y<-x+e#
  yp<-y-y[1]#
  xp<-x-x[1]#
  m<-lm(yp~xp-1)#
  record[i]<-m$coef#
}#
var(record)
for(i in 1:nreps){#
  print(i)#
  n<-300#
  x<-rnorm(n,mean=30)#
  x<-x[order(x)]#
  e<-rnorm(n)#
  y<-x+e#
  yp<-y-y[1]#
  xp<-x-x[1]#
  m<-lm(yp~xp-1)#
  record[i]<-m$coef#
}#
var(record)
library(mlogit) #polr#
library(Design) #lrm#
library(nnet) #multinom#
library(xtable)
count<-c(63,16,12,35,53,15,10,36)#
proc<-as.factor(c(1,1,1,1,0,0,0,0))#
s<-as.factor(c(3,2,2,1,3,2,2,1)) #number of successes
I think this makes the most sense!!#
#Problem is that it simplifies the data too much?#
#THAT'S the problem!#
procexp<-rep(proc,count)#
sexp<-rep(s,count)#
podds3<-polr(sexp~procexp)#
summary(podds3)#
lrm(sexp~procexp) #confirmed basically#
coeftab3<-summary(podds3)$coeff#
pvals3<-pnorm(abs(coeftab3[,3]),mean=0,sd=1,lower.tail=F)#
xtable(cbind(coeftab3,pvals3),digits=3)
part e#
counte<-c(63,16,12,35,53,15,10,36)*35/240#
proce<-as.factor(c(1,1,1,1,0,0,0,0))#
se<-as.factor(c(3,2,2,1,3,2,2,1)) #number of successes#
procexpe<-rep(proce,counte)#
sexpe<-rep(se,counte)#
podds3e<-polr(sexpe~procexpe)#
coeftab3e<-summary(podds3e)$coeff#
pvals3e<-pnorm(abs(coeftab3e[,3]),mean=0,sd=1,lower.tail=F)#
pvals3e#
(1/2^2)*(.786/.189)*240
One alternative:#
pglm<-glm(count~s*proc,family=poisson)#
pglmNull<-glm(count~s,family=poisson)#
summary(pglm)#
anova(pglmNull,pglm)
alt alt?#
mm<-multinom(sexp~procexp)#
summary(mm)
library(nnet)#
library(xtable)
rows<-c(132,179,120,42,7,12,172,123,100,56,8,15)#
matrix(rows,ncol=3,byrow=T)
party factor base; gender factor base, race factor base#
pfb<-as.factor(c("dem","rep","ind","dem","rep","ind","dem","rep","ind","dem","rep","ind"))#
gfb<-as.factor(rep(c("m","f"),each=6))#
rfb<-as.factor(c("w","w","w","b","b","b","w","w","w","b","b","b"))
install.packages(c("rj", "rj.gd"), repos="http://download.walware.de/rj-1.1")
setwd("/Users/aaronfisher/Documents/JH/EDA Versions/Sourcetree EDA Git Repo/SURVEY")#
#
load("data_for_1plots_pilot.RData" )
ls()
plot(pvals,(nes),pch=19,log='x',xaxt='n',yaxt='n',col=c('blue','black')[(pres=='plain')+1],ylim=c(0,300))#
axis(side=1,pbreaks,at=pbreaks)#
axis(side=2,unique(nes),at=unique(nes))#
abline(v=pbreaks[pbins],lty=2)#
abline(h=nes,lty=2)#
text(pvals[pres!="plain"],nes[pres!="plain"]+10,pres[pres!="plain"])#
text(pvals[whichrep],nes[whichrep]-10,"rep")
pbreaks<-c(.001,.01,.05,.15,1)
plot(pvals,(nes),pch=19,log='x',xaxt='n',yaxt='n',col=c('blue','black')[(pres=='plain')+1],ylim=c(0,300))#
axis(side=1,pbreaks,at=pbreaks)#
axis(side=2,unique(nes),at=unique(nes))#
abline(v=pbreaks[pbins],lty=2)#
abline(h=nes,lty=2)#
text(pvals[pres!="plain"],nes[pres!="plain"]+10,pres[pres!="plain"])#
text(pvals[whichrep],nes[whichrep]-10,"rep")
